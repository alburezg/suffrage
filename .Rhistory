)
suf_palette("london")
#' Complete list of palettes
#'
#' Use \code{\link{suf_palette}} to construct palettes of desired length.
#'
#' @export
suf_palettes <- list(
flag = c("#990099", "#009900"),
banner = c("#0000ff", "#f7bb09", "#6d5715", "#136009"),
london = c("#122359", "#8F2F3A", "#D4332B", "#F88508", "#FECA52")
)
suf_palette("london")
#' Complete list of palettes
#'
#' Use \code{\link{suf_palette}} to construct palettes of desired length.
#'
#' @export
suf_palettes <- list(
flag = c("#990099", "#009900"),
banner = c("#0000ff", "#f7bb09", "#6d5715", "#136009"),
london = c("#122359",  "#D4332B","#8F2F3A", "#F88508", "#FECA52")
)
suf_palette("london")
#' Complete list of palettes
#'
#' Use \code{\link{suf_palette}} to construct palettes of desired length.
#'
#' @export
suf_palettes <- list(
flag = c("#990099", "#009900"),
banner = c("#0000ff", "#f7bb09", "#6d5715", "#136009"),
london = c("#122359", "#8F2F3A", "#D4332B", "#F88508", "#FECA52")
)
suf_palette("london")
setwd("..")
library(devtools)
install("suffragette")
library(suffragette)
#' Complete list of palettes
#'
#' Use \code{\link{suf_palette}} to construct palettes of desired length.
#'
#' @export
suf_palettes <- list(
flag = c("#990099", "#009900"),
london = c("#122359", "#8F2F3A", "#D4332B", "#F88508", "#FECA52"),
hanwell = c("#366A26", "#511A79", "#B01824", "#0099C1", "#82D0F0", "#F52D9C")
)
suf_palette("hanwell")
#' Complete list of palettes
#'
#' Use \code{\link{suf_palette}} to construct palettes of desired length.
#'
#' @export
suf_palettes <- list(
flag = c("#990099", "#009900"),
london = c("#122359", "#8F2F3A", "#D4332B", "#F88508", "#FECA52"),
hanwell = c("#366A26",  "#B01824", "#0099C1", "#82D0F0", "#511A79", "#F52D9C")
)
suf_palette("hanwell")
#' Complete list of palettes
#'
#' Use \code{\link{suf_palette}} to construct palettes of desired length.
#'
#' @export
suf_palettes <- list(
flag = c("#990099", "#009900"),
london = c("#122359", "#8F2F3A", "#D4332B", "#F88508", "#FECA52"),
hanwell = c("#366A26",  "#B01824", "#511A79","#0099C1", "#82D0F0",  "#F52D9C")
)
suf_palette("hanwell")
#' Complete list of palettes
#'
#' Use \code{\link{suf_palette}} to construct palettes of desired length.
#'
#' @export
suf_palettes <- list(
flag = c("#990099", "#009900"),
london = c("#122359", "#8F2F3A", "#D4332B", "#F88508", "#FECA52"),
hanwell = c("#366A26",  "#B01824",  "#F52D9C", "#511A79","#0099C1", "#82D0F0")
)
suf_palette("hanwell")
#' Complete list of palettes
#'
#' Use \code{\link{suf_palette}} to construct palettes of desired length.
#'
#' @export
suf_palettes <- list(
flag = c("#990099", "#009900"),
london = c("#122359", "#8F2F3A", "#D4332B", "#F88508", "#FECA52"),
hanwell = c("#366A26",  "#B01824",  "#F52D9C", "#511A79","#0099C1", "#82D0F0")
)
suf_palette("hanwell")
#' Complete list of palettes
#'
#' Use \code{\link{suf_palette}} to construct palettes of desired length.
#'
#' @export
suf_palettes <- list(
flag = c("#990099", "#009900"),
london = c("#122359", "#8F2F3A", "#D4332B", "#F88508", "#FECA52"),
hanwell = c("#366A26", "#F52D9C", "#B01824",   "#511A79","#0099C1", "#82D0F0")
)
suf_palette("hanwell")
#' Complete list of palettes
#'
#' Use \code{\link{suf_palette}} to construct palettes of desired length.
#'
#' @export
suf_palettes <- list(
flag = c("#990099", "#009900"),
london = c("#122359", "#8F2F3A", "#D4332B", "#F88508", "#FECA52"),
hanwell = c("#366A26", "#B01824","#F52D9C",    "#511A79","#0099C1", "#82D0F0")
)
suf_palette("hanwell")
#' Complete list of palettes
#'
#' Use \code{\link{suf_palette}} to construct palettes of desired length.
#'
#' @export
suf_palettes <- list(
flag = c("#990099", "#009900"),
london = c("#122359", "#8F2F3A", "#D4332B", "#F88508", "#FECA52"),
hanwell = c("#F52D9C","#366A26", "#B01824",    "#511A79","#0099C1", "#82D0F0")
)
suf_palette("hanwell")
#' Complete list of palettes
#'
#' Use \code{\link{suf_palette}} to construct palettes of desired length.
#'
#' @export
suf_palettes <- list(
flag = c("#990099", "#009900"),
london = c("#122359", "#8F2F3A", "#D4332B", "#F88508", "#FECA52"),
hanwell = c("#366A26", "#B01824", "#F52D9C","#511A79","#0099C1", "#82D0F0")
)
suf_palette("hanwell")
install("suffragette")
library(devtools)
use_readme_rmd()
data(airquality)
ggplot(airquality, aes(x=Day, y=Month)) +
geom_tile(aes(fill=Temp)) +
scale_fill_gradientn(colours = suf_palette("hanwell", 21, type = "continuous")) +
scale_x_discrete(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0)) +
coord_equal() +
theme(legend.position = "top")
library(ggplot2)
ggplot(airquality, aes(x=Day, y=Month)) +
geom_tile(aes(fill=Temp)) +
scale_fill_gradientn(colours = suf_palette("hanwell", 21, type = "continuous")) +
scale_x_discrete(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0)) +
coord_equal() +
theme(legend.position = "top")
library(suffrage)
ggplot(airquality, aes(x=Day, y=Month)) +
geom_tile(aes(fill=Temp)) +
scale_fill_gradientn(colours = suf_palette("hanwell", 21, type = "continuous")) +
scale_x_discrete(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0)) +
coord_equal() +
theme(legend.position = "top")
ggplot(airquality, aes(x=Day, y=Month)) +
geom_tile(aes(fill=Temp)) +
scale_fill_gradientn(colours = suf_palette("hanwell", 42, type = "continuous")) +
scale_x_discrete(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0)) +
coord_equal() +
theme(legend.position = "top")
ggplot(airquality, aes(x=Day, y=Month)) +
geom_tile(aes(fill=Temp)) +
scale_fill_gradientn(colours = suf_palette("hanwell", 20, type = "continuous")) +
scale_x_discrete(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0)) +
coord_equal() +
theme(legend.position = "top")
ggplot(airquality, aes(x=Day, y=Month)) +
geom_tile(aes(fill=Temp)) +
scale_fill_gradientn(colours = suf_palette("hanwell", 20, type = "continuous")) +
scale_x_discrete(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0)) +
theme(legend.position = "top")
ggplot(airquality, aes(x=Day, y=Month)) +
geom_tile(aes(fill=Temp)) +
scale_fill_gradientn(colours = suf_palette("hanwell", 20, type = "continuous")) +
scale_x_discrete(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0)) +
coord_equal() +
theme(legend.position = "top")
ggplot(airquality, aes(x=Day, y=Month)) +
geom_tile(aes(fill=Temp)) +
scale_fill_gradientn(colours = suf_palette("london", 20, type = "continuous")) +
scale_x_discrete(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0)) +
# coord_equal() +
theme(legend.position = "top")
ggplot(airquality, aes(x=Day, y=Month)) +
geom_tile(aes(fill=Temp)) +
scale_fill_gradientn(colours = suf_palette("london", 30, type = "continuous")) +
scale_x_discrete(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0)) +
coord_equal() +
theme(legend.position = "top")
ggplot(airquality, aes(x=Day, y=Month)) +
geom_tile(aes(fill=Temp)) +
scale_fill_gradientn(colours = suf_palette("london", 30, type = "continuous")) +
# scale_x_discrete(expand = c(0, 0)) +
# scale_y_discrete(expand = c(0, 0)) +
coord_equal() +
theme(legend.position = "top")
"#882635
#B98B3D
#93A4B8
#463360
#24392A
#D98084"
x <- "#882635
#B98B3D
#93A4B8
#463360
#24392A
#D98084"
x
vec <- function(x) gsub("\n", ",")
vec(x)
vec <- function(x) gsub("\n", ",",x)
vec(x)
vec <- function(x) x <- gsub("\n", ",",x); gsub("^,*|(?<=,),|,*$", "", x, perl=T)
vec <- function(x) x <- gsub("\n", ",",x); gsub("^,*|(?<=,),|,*$", "", x, perl=T)
vec <- function(x) { x <- gsub("\n", ",",x); gsub("^,*|(?<=,),|,*$", "", x, perl=T)}
vec(x)
# transform column to vector
vec <- function(x) { x <- gsub("\n", ",",x); gsub("^,*|(?<=,),|,*$", "", x, perl=T)}
x <- "#FF2C00
#DD4D0E
#EDD422
#090C2F
#032D67
#4391C2
#3A8121
#7C4E1A"
# transform column to vector
vec(x)
# transform column to vector
manchester <- vec(x)
vec <- function(x) { x <- gsub("\n", ",",x); dput(gsub("^,*|(?<=,),|,*$", "", x, perl=T)) }
x <- "#FF2C00
#DD4D0E
#EDD422
#090C2F
#032D67
#4391C2
#3A8121
#7C4E1A"
# transform column to vector
vec(x)
dput(gsub("^,*|(?<=,),|,*$", "", x, perl=T))
vec <- function(x) { x <- gsub("\n", ",",x); dput(gsub("^,*|(?<=,),|,*$", "", x, perl=T)) }
x <- "#FF2C00
#DD4D0E
#EDD422
#090C2F
#032D67
#4391C2
#3A8121
#7C4E1A"
# transform column to vector
vec(x)
# transform column to vector
dput(vec(x))
# transform column to vector
s <- vec(x)
dput(s)
vec <- function(x) { x <- gsub("\n", ",",x); dput(unlist(strsplit(gsub("^,*|(?<=,),|,*$", "", x, perl=T), "'")) }
vec <- function(x) { x <- gsub("\n", ",",x); dput(unlist(strsplit(gsub("^,*|(?<=,),|,*$", "", x, perl=T), "'"))) }
x <- "#FF2C00
#DD4D0E
#EDD422
#090C2F
#032D67
#4391C2
#3A8121
#7C4E1A"
# transform column to vector
s <- vec(x)
s
x <- "#FF2C00
#DD4D0E
#EDD422
#090C2F
#032D67
#4391C2
#3A8121
#7C4E1A"
strsplit(gsub("^,*|(?<=,),|,*$", "", x, perl=T), "'")
vec <- function(x) { x <- gsub("\n", ",",x); dput(unlist(strsplit(gsub("^,*|(?<=,),|,*$", "", x, perl=T), ","))) }
x <- "#FF2C00
#DD4D0E
#EDD422
#090C2F
#032D67
#4391C2
#3A8121
#7C4E1A"
# transform column to vector
s <- vec(x)
#' Complete list of palettes
#'
#' Use \code{\link{suf_palette}} to construct palettes of desired length.
#'
#' @export
suf_palettes <- list(
flag = c("#990099", "#009900"),
london = c("#122359", "#8F2F3A", "#D4332B", "#F88508", "#FECA52"),
hanwell = c("#990099","#009900", "#B01824", "#F52D9C","#0099C1", "#82D0F0"),
oxon = c("#C10528", "#E46E30", "#BC8B49", "#A2D2D4", "#0D4278", "#4D3161"),
manchester = c("#FF2C00", "#DD4D0E", "#EDD422", "#090C2F", "#032D67", "#4391C2",
"#3A8121", "#7C4E1A")
)
suf_palette("manchester")
#' wes_palette("Royal1")
#' wes_palette("GrandBudapest1")
#' wes_palette("Cavalcanti1")
#' wes_palette("Cavalcanti1", 3)
#'
#' # If you need more colours than normally found in a palette, you
#' # can use a continuous palette to interpolate between existing
#' # colours
#' pal <- wes_palette(21, name = "Zissou1", type = "continuous")
#' image(volcano, col = pal)
suf_palette <- function(name, n, type = c("discrete", "continuous")) {
type <- match.arg(type)
pal <- suf_palettes[[name]]
if (is.null(pal))
stop("Palette not found.")
if (missing(n)) {
n <- length(pal)
}
if (type == "discrete" && n > length(pal)) {
stop("Number of requested colors greater than what palette can offer")
}
out <- switch(type,
continuous = grDevices::colorRampPalette(pal)(n),
discrete = pal[1:n]
)
structure(out, class = "palette", name = name)
}
suf_palette("manchester")
#' @export
#' @importFrom graphics rect par image text
#' @importFrom grDevices rgb
print.palette <- function(x, ...) {
n <- length(x)
old <- par(mar = c(0.5, 0.5, 0.5, 0.5))
on.exit(par(old))
image(1:n, 1, as.matrix(1:n), col = x,
ylab = "", xaxt = "n", yaxt = "n", bty = "n")
rect(0, 0.9, n + 1, 1.1, col = rgb(1, 1, 1, 0.8), border = NA)
text((n + 1) / 2, 1, labels = attr(x, "name"), cex = 1, family = "serif")
}
suf_palette("manchester")
vec <- function(x) { x <- gsub("\n", ",",x); unlist(strsplit(gsub("^,*|(?<=,),|,*$", "", x, perl=T), ",")) }
x <- "#FF2C00
#DD4D0E
#EDD422
#090C2F
#032D67
#4391C2
#3A8121
#7C4E1A"
# transform column to vector
vec(x)
x <- "#7C4E1A
#DD4D0E
#FF2C00
#EDD422
#3A8121
#4391C2
#032D67
#090C2F"
# transform column to vector
dput(vec(x))
#' Complete list of palettes
#'
#' Use \code{\link{suf_palette}} to construct palettes of desired length.
#'
#' @export
suf_palettes <- list(
flag = c("#990099", "#009900"),
london = c("#122359", "#8F2F3A", "#D4332B", "#F88508", "#FECA52"),
hanwell = c("#990099","#009900", "#B01824", "#F52D9C","#0099C1", "#82D0F0"),
oxon = c("#C10528", "#E46E30", "#BC8B49", "#A2D2D4", "#0D4278", "#4D3161"),
manchester = c("#7C4E1A", "#DD4D0E", "#FF2C00", "#EDD422", "#3A8121", "#4391C2",
"#032D67", "#090C2F")
)
suf_palette("manchester")
x <-
"
#882635
#B98B3D
#93A4B8
#463360
#24392A
#D98084
"
# transform column to vector
dput(vec(x))
#' Complete list of palettes
#'
#' Use \code{\link{suf_palette}} to construct palettes of desired length.
#'
#' @export
suf_palettes <- list(
flag = c("#990099", "#009900"),
london = c("#122359", "#8F2F3A", "#D4332B", "#F88508", "#FECA52"),
hanwell = c("#990099","#009900", "#B01824", "#F52D9C","#0099C1", "#82D0F0"),
oxon = c("#C10528", "#E46E30", "#BC8B49", "#A2D2D4", "#0D4278", "#4D3161"),
manchester = c("#7C4E1A", "#DD4D0E", "#FF2C00", "#EDD422", "#3A8121", "#4391C2",
"#032D67", "#090C2F"),
c("#882635", "#B98B3D", "#93A4B8", "#463360", "#24392A", "#D98084")
)
suf_palette("mary")
#' Complete list of palettes
#'
#' Use \code{\link{suf_palette}} to construct palettes of desired length.
#'
#' @export
suf_palettes <- list(
flag = c("#990099", "#009900"),
london = c("#122359", "#8F2F3A", "#D4332B", "#F88508", "#FECA52"),
hanwell = c("#990099","#009900", "#B01824", "#F52D9C","#0099C1", "#82D0F0"),
oxon = c("#C10528", "#E46E30", "#BC8B49", "#A2D2D4", "#0D4278", "#4D3161"),
manchester = c("#7C4E1A", "#DD4D0E", "#FF2C00", "#EDD422", "#3A8121", "#4391C2",
"#032D67", "#090C2F"),
mary = c("#882635", "#B98B3D", "#93A4B8", "#463360", "#24392A", "#D98084")
)
suf_palette("mary")
suf_palette("manchester")
suf_palette("mary")
suf_palette("manchester")
suf_palette("mary")
x <-
"
#24392A
#463360
#B98B3D
#882635
#93A4B8
#D98084
"
# transform column to vector
dput(vec(x))
#' Complete list of palettes
#'
#' Use \code{\link{suf_palette}} to construct palettes of desired length.
#'
#' @export
suf_palettes <- list(
flag = c("#990099", "#009900"),
london = c("#122359", "#8F2F3A", "#D4332B", "#F88508", "#FECA52"),
hanwell = c("#990099","#009900", "#B01824", "#F52D9C","#0099C1", "#82D0F0"),
oxon = c("#C10528", "#E46E30", "#BC8B49", "#A2D2D4", "#0D4278", "#4D3161"),
manchester = c("#7C4E1A", "#DD4D0E", "#FF2C00", "#EDD422", "#3A8121", "#4391C2",
"#032D67", "#090C2F"),
mary = c("#24392A", "#463360", "#B98B3D", "#882635", "#93A4B8", "#D98084")
)
suf_palette("mary")
x <-
"
#24392A
#463360
#882635
#B98B3D
#93A4B8
#D98084
"
# transform column to vector
dput(vec(x))
#' Complete list of palettes
#'
#' Use \code{\link{suf_palette}} to construct palettes of desired length.
#'
#' @export
suf_palettes <- list(
flag = c("#990099", "#009900"),
london = c("#122359", "#8F2F3A", "#D4332B", "#F88508", "#FECA52"),
hanwell = c("#990099","#009900", "#B01824", "#F52D9C","#0099C1", "#82D0F0"),
oxon = c("#C10528", "#E46E30", "#BC8B49", "#A2D2D4", "#0D4278", "#4D3161"),
manchester = c("#7C4E1A", "#DD4D0E", "#FF2C00", "#EDD422", "#3A8121", "#4391C2",
"#032D67", "#090C2F"),
mary = c("#24392A", "#463360", "#882635", "#B98B3D", "#93A4B8", "#D98084")
)
suf_palette("mary")
#' Complete list of palettes
#'
#' Use \code{\link{suf_palette}} to construct palettes of desired length.
#'
#' @export
suf_palettes <- list(
flag = c("#990099", "#009900"),
london = c("#122359", "#8F2F3A", "#D4332B", "#F88508", "#FECA52"),
hanwell = c("#990099","#009900", "#B01824", "#F52D9C","#0099C1", "#82D0F0"),
oxon = c("#C10528", "#E46E30", "#BC8B49", "#A2D2D4", "#0D4278", "#4D3161"),
manchester = c("#7C4E1A", "#DD4D0E", "#FF2C00", "#EDD422", "#3A8121", "#4391C2",
"#032D67", "#090C2F"),
mary = c("#24392A", "#463360", "#882635", "#B98B3D", "#D98084", "#93A4B8")
)
suf_palette("mary")
devtools::install_github("alburezg/suffrage")
