#' Complete list of palettes
#'
#' Use \code{\link{suf_palette}} to construct palettes of desired length.
#'
#' @export
suf_palettes <- list(
flag = c("#990099", "#009900"),
banner = c("#0000ff", "#f7bb09", "#6d5715", "#136009")
)
#' wes_palette("Royal1")
#' wes_palette("GrandBudapest1")
#' wes_palette("Cavalcanti1")
#' wes_palette("Cavalcanti1", 3)
#'
#' # If you need more colours than normally found in a palette, you
#' # can use a continuous palette to interpolate between existing
#' # colours
#' pal <- wes_palette(21, name = "Zissou1", type = "continuous")
#' image(volcano, col = pal)
suf_palette <- function(name, n, type = c("discrete", "continuous")) {
type <- match.arg(type)
pal <- suf_palettes[[name]]
if (is.null(pal))
stop("Palette not found.")
if (missing(n)) {
n <- length(pal)
}
if (type == "discrete" && n > length(pal)) {
stop("Number of requested colors greater than what palette can offer")
}
out <- switch(type,
continuous = grDevices::colorRampPalette(pal)(n),
discrete = pal[1:n]
)
structure(out, class = "palette", name = name)
}
#' @export
#' @importFrom graphics rect par image text
#' @importFrom grDevices rgb
print.palette <- function(x, ...) {
n <- length(x)
old <- par(mar = c(0.5, 0.5, 0.5, 0.5))
on.exit(par(old))
image(1:n, 1, as.matrix(1:n), col = x,
ylab = "", xaxt = "n", yaxt = "n", bty = "n")
rect(0, 0.9, n + 1, 1.1, col = rgb(1, 1, 1, 0.8), border = NA)
text((n + 1) / 2, 1, labels = attr(x, "name"), cex = 1, family = "serif")
}
#' heatmap
#'
#' A heatmap example
"heatmap"
suf_palette("flag")
suf_palette("banner")
install("suffragette")
library(devtools)
suf_palette("banner")
install("suffragette")
setwd("..")
install("suffragette")
library(suffragette)
suf_palette()
names(suf_palettes)
names(suf_palettes)
suf_palette("flag")
suf_palette(name = "flag", n = 6, type = "continuous")
suf_palette("banner", n = 10, type = "continuous")
#' Complete list of palettes
#'
#' Use \code{\link{suf_palette}} to construct palettes of desired length.
#'
#' @export
suf_palettes <- list(
flag = c("#990099", "#009900"),
banner = c("#0000ff", "#f7bb09", "#6d5715", "#136009"),
london = c("#D4332B", "#F88508", "#FECA52", "#122359", "#8F2F3A")
)
#' wes_palette("Royal1")
#' wes_palette("GrandBudapest1")
#' wes_palette("Cavalcanti1")
#' wes_palette("Cavalcanti1", 3)
#'
#' # If you need more colours than normally found in a palette, you
#' # can use a continuous palette to interpolate between existing
#' # colours
#' pal <- wes_palette(21, name = "Zissou1", type = "continuous")
#' image(volcano, col = pal)
suf_palette <- function(name, n, type = c("discrete", "continuous")) {
type <- match.arg(type)
pal <- suf_palettes[[name]]
if (is.null(pal))
stop("Palette not found.")
if (missing(n)) {
n <- length(pal)
}
if (type == "discrete" && n > length(pal)) {
stop("Number of requested colors greater than what palette can offer")
}
out <- switch(type,
continuous = grDevices::colorRampPalette(pal)(n),
discrete = pal[1:n]
)
structure(out, class = "palette", name = name)
}
#' @export
#' @importFrom graphics rect par image text
#' @importFrom grDevices rgb
print.palette <- function(x, ...) {
n <- length(x)
old <- par(mar = c(0.5, 0.5, 0.5, 0.5))
on.exit(par(old))
image(1:n, 1, as.matrix(1:n), col = x,
ylab = "", xaxt = "n", yaxt = "n", bty = "n")
rect(0, 0.9, n + 1, 1.1, col = rgb(1, 1, 1, 0.8), border = NA)
text((n + 1) / 2, 1, labels = attr(x, "name"), cex = 1, family = "serif")
}
suf_palette("london")
#' Complete list of palettes
#'
#' Use \code{\link{suf_palette}} to construct palettes of desired length.
#'
#' @export
suf_palettes <- list(
flag = c("#990099", "#009900"),
banner = c("#0000ff", "#f7bb09", "#6d5715", "#136009"),
london = c("#8F2F3A", "#D4332B", "#F88508", "#FECA52", "#122359")
)
suf_palette("london")
#' Complete list of palettes
#'
#' Use \code{\link{suf_palette}} to construct palettes of desired length.
#'
#' @export
suf_palettes <- list(
flag = c("#990099", "#009900"),
banner = c("#0000ff", "#f7bb09", "#6d5715", "#136009"),
london = c("#122359", "#8F2F3A", "#D4332B", "#F88508", "#FECA52")
)
suf_palette("london")
#' Complete list of palettes
#'
#' Use \code{\link{suf_palette}} to construct palettes of desired length.
#'
#' @export
suf_palettes <- list(
flag = c("#990099", "#009900"),
banner = c("#0000ff", "#f7bb09", "#6d5715", "#136009"),
london = c("#122359",  "#D4332B","#8F2F3A", "#F88508", "#FECA52")
)
suf_palette("london")
#' Complete list of palettes
#'
#' Use \code{\link{suf_palette}} to construct palettes of desired length.
#'
#' @export
suf_palettes <- list(
flag = c("#990099", "#009900"),
banner = c("#0000ff", "#f7bb09", "#6d5715", "#136009"),
london = c("#122359", "#8F2F3A", "#D4332B", "#F88508", "#FECA52")
)
suf_palette("london")
setwd("..")
library(devtools)
install("suffragette")
library(suffragette)
#' Complete list of palettes
#'
#' Use \code{\link{suf_palette}} to construct palettes of desired length.
#'
#' @export
suf_palettes <- list(
flag = c("#990099", "#009900"),
london = c("#122359", "#8F2F3A", "#D4332B", "#F88508", "#FECA52"),
hanwell = c("#366A26", "#511A79", "#B01824", "#0099C1", "#82D0F0", "#F52D9C")
)
suf_palette("hanwell")
#' Complete list of palettes
#'
#' Use \code{\link{suf_palette}} to construct palettes of desired length.
#'
#' @export
suf_palettes <- list(
flag = c("#990099", "#009900"),
london = c("#122359", "#8F2F3A", "#D4332B", "#F88508", "#FECA52"),
hanwell = c("#366A26",  "#B01824", "#0099C1", "#82D0F0", "#511A79", "#F52D9C")
)
suf_palette("hanwell")
#' Complete list of palettes
#'
#' Use \code{\link{suf_palette}} to construct palettes of desired length.
#'
#' @export
suf_palettes <- list(
flag = c("#990099", "#009900"),
london = c("#122359", "#8F2F3A", "#D4332B", "#F88508", "#FECA52"),
hanwell = c("#366A26",  "#B01824", "#511A79","#0099C1", "#82D0F0",  "#F52D9C")
)
suf_palette("hanwell")
#' Complete list of palettes
#'
#' Use \code{\link{suf_palette}} to construct palettes of desired length.
#'
#' @export
suf_palettes <- list(
flag = c("#990099", "#009900"),
london = c("#122359", "#8F2F3A", "#D4332B", "#F88508", "#FECA52"),
hanwell = c("#366A26",  "#B01824",  "#F52D9C", "#511A79","#0099C1", "#82D0F0")
)
suf_palette("hanwell")
#' Complete list of palettes
#'
#' Use \code{\link{suf_palette}} to construct palettes of desired length.
#'
#' @export
suf_palettes <- list(
flag = c("#990099", "#009900"),
london = c("#122359", "#8F2F3A", "#D4332B", "#F88508", "#FECA52"),
hanwell = c("#366A26",  "#B01824",  "#F52D9C", "#511A79","#0099C1", "#82D0F0")
)
suf_palette("hanwell")
#' Complete list of palettes
#'
#' Use \code{\link{suf_palette}} to construct palettes of desired length.
#'
#' @export
suf_palettes <- list(
flag = c("#990099", "#009900"),
london = c("#122359", "#8F2F3A", "#D4332B", "#F88508", "#FECA52"),
hanwell = c("#366A26", "#F52D9C", "#B01824",   "#511A79","#0099C1", "#82D0F0")
)
suf_palette("hanwell")
#' Complete list of palettes
#'
#' Use \code{\link{suf_palette}} to construct palettes of desired length.
#'
#' @export
suf_palettes <- list(
flag = c("#990099", "#009900"),
london = c("#122359", "#8F2F3A", "#D4332B", "#F88508", "#FECA52"),
hanwell = c("#366A26", "#B01824","#F52D9C",    "#511A79","#0099C1", "#82D0F0")
)
suf_palette("hanwell")
#' Complete list of palettes
#'
#' Use \code{\link{suf_palette}} to construct palettes of desired length.
#'
#' @export
suf_palettes <- list(
flag = c("#990099", "#009900"),
london = c("#122359", "#8F2F3A", "#D4332B", "#F88508", "#FECA52"),
hanwell = c("#F52D9C","#366A26", "#B01824",    "#511A79","#0099C1", "#82D0F0")
)
suf_palette("hanwell")
#' Complete list of palettes
#'
#' Use \code{\link{suf_palette}} to construct palettes of desired length.
#'
#' @export
suf_palettes <- list(
flag = c("#990099", "#009900"),
london = c("#122359", "#8F2F3A", "#D4332B", "#F88508", "#FECA52"),
hanwell = c("#366A26", "#B01824", "#F52D9C","#511A79","#0099C1", "#82D0F0")
)
suf_palette("hanwell")
install("suffragette")
